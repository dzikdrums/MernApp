{"ast":null,"code":"var _jsxFileName = \"/Users/macus/Desktop/MERNapp/src/components/features/SinglePost/SinglePost.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ReactHtmlParser from 'react-html-parser';\nimport { connect } from 'react-redux';\nimport { loadSinglePostRequest, getSinglePost } from 'redux/postsRedux';\nconst StyledWrapper = styled.div`\n  width: 100%;\n  padding: 2vw 10vw 0 4vw;\n  border-bottom: 0.5px solid #666;\n\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    transform: scale(1.02);\n  }\n`;\nconst StyledTitle = styled.h1`\n  font-weight: ${({\n  theme\n}) => theme.bold};\n  font-size: ${({\n  theme\n}) => theme.fontSize.l};\n`;\nconst StyledAuthor = styled.p`\n  color: #666;\n  font-size: ${({\n  theme\n}) => theme.fontSize.m};\n`;\nconst StyledContent = styled.p`\n  color: #666;\n  font-size: ${({\n  theme\n}) => theme.fontSize.s};\n`;\n\nclass SinglePost extends React.Component {\n  componentDidMount() {\n    const {\n      loadSinglePostRequest,\n      match\n    } = this.props;\n    loadSinglePostRequest(match.params.id);\n  }\n\n  render() {\n    const {\n      post: {\n        title,\n        author,\n        text\n      }\n    } = this.props;\n    console.log(post);\n    return React.createElement(StyledWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(StyledTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, title), React.createElement(StyledAuthor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, author), React.createElement(StyledContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, text));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: getSinglePost(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadSinglePostRequest: id => dispatch(loadSinglePostRequest(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","map":{"version":3,"sources":["/Users/macus/Desktop/MERNapp/src/components/features/SinglePost/SinglePost.js"],"names":["React","styled","ReactHtmlParser","connect","loadSinglePostRequest","getSinglePost","StyledWrapper","div","StyledTitle","h1","theme","bold","fontSize","l","StyledAuthor","p","m","StyledContent","s","SinglePost","Component","componentDidMount","match","props","params","id","render","post","title","author","text","console","log","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,EAAgCC,aAAhC,QAAqD,kBAArD;AAEA,MAAMC,aAAa,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;CAAjC;AAWA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,EAAG;iBACb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAK;eAC5B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAN,CAAeC,CAAE;CAF/C;AAKA,MAAMC,YAAY,GAAGb,MAAM,CAACc,CAAE;;eAEf,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAN,CAAeI,CAAE;CAF/C;AAKA,MAAMC,aAAa,GAAGhB,MAAM,CAACc,CAAE;;eAEhB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAN,CAAeM,CAAE;CAF/C;;AAKA,MAAMC,UAAN,SAAyBnB,KAAK,CAACoB,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEjB,MAAAA,qBAAF;AAAyBkB,MAAAA;AAAzB,QAAmC,KAAKC,KAA9C;AACAnB,IAAAA,qBAAqB,CAACkB,KAAK,CAACE,MAAN,CAAaC,EAAd,CAArB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA;AAAjB;AADF,QAEF,KAAKP,KAFT;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcC,KAAd,CADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,MAAf,CAFF,EAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBC,IAAhB,CAHF,CADF;AAOD;;AAnBsC;;AAsBzC,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,IAAI,EAAEtB,aAAa,CAAC6B,KAAD;AADa,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtChC,EAAAA,qBAAqB,EAAEqB,EAAE,IAAIW,QAAQ,CAAChC,qBAAqB,CAACqB,EAAD,CAAtB;AADC,CAAL,CAAnC;;AAIA,eAAetB,OAAO,CAAC8B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport ReactHtmlParser from 'react-html-parser';\nimport { connect } from 'react-redux';\nimport { loadSinglePostRequest, getSinglePost } from 'redux/postsRedux';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  padding: 2vw 10vw 0 4vw;\n  border-bottom: 0.5px solid #666;\n\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    transform: scale(1.02);\n  }\n`;\n\nconst StyledTitle = styled.h1`\n  font-weight: ${({ theme }) => theme.bold};\n  font-size: ${({ theme }) => theme.fontSize.l};\n`;\n\nconst StyledAuthor = styled.p`\n  color: #666;\n  font-size: ${({ theme }) => theme.fontSize.m};\n`;\n\nconst StyledContent = styled.p`\n  color: #666;\n  font-size: ${({ theme }) => theme.fontSize.s};\n`;\n\nclass SinglePost extends React.Component {\n  componentDidMount() {\n    const { loadSinglePostRequest, match } = this.props;\n    loadSinglePostRequest(match.params.id);\n  }\n\n  render() {\n    const {\n      post: { title, author, text },\n    } = this.props;\n    console.log(post);\n\n    return (\n      <StyledWrapper>\n        <StyledTitle>{title}</StyledTitle>\n        <StyledAuthor>{author}</StyledAuthor>\n        <StyledContent>{text}</StyledContent>\n      </StyledWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  post: getSinglePost(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadSinglePostRequest: id => dispatch(loadSinglePostRequest(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);\n"]},"metadata":{},"sourceType":"module"}