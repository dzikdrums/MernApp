{"ast":null,"code":"var _jsxFileName = \"/Users/macus/Desktop/MERNapp/src/components/features/SinglePost/SinglePost.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { loadSinglePostRequest, getSinglePost } from 'redux/postsRedux';\nimport Button from 'components/common/Button/Button';\nconst StyledWrapper = styled.div`\n  width: 100%;\n  padding-top: 20px;\n  display: flex;\n  justify-content: center;\n`;\nconst InnerWrapper = styled.div`\n  width: 50%;\n`;\nconst StyledTitle = styled.h1`\n  font-weight: ${({\n  theme\n}) => theme.light};\n  font-size: ${({\n  theme\n}) => theme.fontSize.xl};\n  letter-spacing: 1px;\n`;\nconst StyledAuthor = styled.p`\n  color: ${({\n  theme\n}) => theme.grey400};\n  font-size: ${({\n  theme\n}) => theme.fontSize.m};\n`;\nconst StyledContent = styled.p`\n  color: ${({\n  theme\n}) => theme.black};\n  font-size: ${({\n  theme\n}) => theme.fontSize.m};\n  letter-spacing: 1px;\n`;\n\nclass SinglePost extends React.Component {\n  componentDidMount() {\n    const {\n      loadSinglePostRequest,\n      match\n    } = this.props;\n    loadSinglePostRequest(match.params.id);\n  }\n\n  render() {\n    const {\n      post: {\n        title,\n        author,\n        text\n      }\n    } = this.props;\n    return React.createElement(StyledWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(InnerWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(StyledTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, title), React.createElement(StyledAuthor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, author), React.createElement(StyledContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, text), React.createElement(Button, {\n      as: NavLink,\n      NavLink: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"go back\")));\n  }\n\n}\n\nSinglePost.propTypes = {\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  loadSinglePostRequest: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: getSinglePost(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadSinglePostRequest: id => dispatch(loadSinglePostRequest(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","map":{"version":3,"sources":["/Users/macus/Desktop/MERNapp/src/components/features/SinglePost/SinglePost.js"],"names":["React","styled","connect","NavLink","PropTypes","loadSinglePostRequest","getSinglePost","Button","StyledWrapper","div","InnerWrapper","StyledTitle","h1","theme","light","fontSize","xl","StyledAuthor","p","grey400","m","StyledContent","black","SinglePost","Component","componentDidMount","match","props","params","id","render","post","title","author","text","propTypes","string","isRequired","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { loadSinglePostRequest, getSinglePost } from 'redux/postsRedux';\nimport Button from 'components/common/Button/Button';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  padding-top: 20px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst InnerWrapper = styled.div`\n  width: 50%;\n`;\n\nconst StyledTitle = styled.h1`\n  font-weight: ${({ theme }) => theme.light};\n  font-size: ${({ theme }) => theme.fontSize.xl};\n  letter-spacing: 1px;\n`;\n\nconst StyledAuthor = styled.p`\n  color: ${({ theme }) => theme.grey400};\n  font-size: ${({ theme }) => theme.fontSize.m};\n`;\n\nconst StyledContent = styled.p`\n  color: ${({ theme }) => theme.black};\n  font-size: ${({ theme }) => theme.fontSize.m};\n  letter-spacing: 1px;\n`;\n\nclass SinglePost extends React.Component {\n  componentDidMount() {\n    const { loadSinglePostRequest, match } = this.props;\n    loadSinglePostRequest(match.params.id);\n  }\n\n  render() {\n    const {\n      post: { title, author, text },\n    } = this.props;\n\n    return (\n      <StyledWrapper>\n        <InnerWrapper>\n          <StyledTitle>{title}</StyledTitle>\n          <StyledAuthor>{author}</StyledAuthor>\n          <StyledContent>{text}</StyledContent>\n          <Button as={NavLink} NavLink to=\"/\">\n            go back\n          </Button>\n        </InnerWrapper>\n      </StyledWrapper>\n    );\n  }\n}\n\nSinglePost.propTypes = {\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  loadSinglePostRequest: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  post: getSinglePost(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadSinglePostRequest: id => dispatch(loadSinglePostRequest(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);\n"]},"metadata":{},"sourceType":"module"}