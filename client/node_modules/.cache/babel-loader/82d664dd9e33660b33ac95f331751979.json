{"ast":null,"code":"var _jsxFileName = \"/Users/macus/Desktop/MERNapp/src/components/common/Post/Post.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Redirect } from 'react-router-dom';\nconst StyledWrapper = styled.div`\n  width: 100%;\n  padding: 2vw 10vw 0 4vw;\n  border-bottom: 0.5px solid #666;\n\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    transform: scale(1.02);\n  }\n`;\nconst StyledTitle = styled.h1`\n  font-weight: ${({\n  theme\n}) => theme.bold};\n  font-size: ${({\n  theme\n}) => theme.fontSize.l};\n`;\nconst StyledAuthor = styled.p`\n  color: #666;\n  font-size: ${({\n  theme\n}) => theme.fontSize.m};\n`;\nconst StyledContent = styled.p`\n  color: #666;\n  font-size: ${({\n  theme\n}) => theme.fontSize.s};\n`;\nconst StyledButton = styled.button`\n  color: #666;\n  margin: 10px 0 20px 10px;\n  height: 46px;\n  width: 100px;\n  background-color: transparent;\n  outline: none;\n  border: 1px solid ${({\n  theme\n}) => theme.yellow};\n  border-radius: 10px;\n  font-size: ${({\n  theme\n}) => theme.fontSize.xs};\n`;\n\nconst buttonHandler = id => {\n  console.log('dupa');\n  return React.createElement(Redirect, {\n    to: `post/${id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\n\nconst Post = ({\n  title,\n  author,\n  content,\n  id\n}) => React.createElement(StyledWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(StyledTitle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, title), React.createElement(StyledAuthor, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, author), React.createElement(StyledContent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, ReactHtmlParser(content)), React.createElement(StyledButton, {\n  onClick: () => buttonHandler({\n    id\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, \"Read more\"));\n\nexport default Post;","map":{"version":3,"sources":["/Users/macus/Desktop/MERNapp/src/components/common/Post/Post.js"],"names":["React","styled","ReactHtmlParser","Redirect","StyledWrapper","div","StyledTitle","h1","theme","bold","fontSize","l","StyledAuthor","p","m","StyledContent","s","StyledButton","button","yellow","xs","buttonHandler","id","console","log","Post","title","author","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;CAAjC;AAWA,MAAMC,WAAW,GAAGL,MAAM,CAACM,EAAG;iBACb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAK;eAC5B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAN,CAAeC,CAAE;CAF/C;AAKA,MAAMC,YAAY,GAAGX,MAAM,CAACY,CAAE;;eAEf,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAN,CAAeI,CAAE;CAF/C;AAKA,MAAMC,aAAa,GAAGd,MAAM,CAACY,CAAE;;eAEhB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAN,CAAeM,CAAE;CAF/C;AAKA,MAAMC,YAAY,GAAGhB,MAAM,CAACiB,MAAO;;;;;;;sBAOb,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACW,MAAO;;eAEnC,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAN,CAAeU,EAAG;CAThD;;AAYA,MAAMC,aAAa,GAAGC,EAAE,IAAI;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,QAAOF,EAAG,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAHD;;AAKA,MAAMG,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,OAAjB;AAA0BN,EAAAA;AAA1B,CAAD,KACX,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAcI,KAAd,CADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAeC,MAAf,CAFF,EAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgBzB,eAAe,CAAC0B,OAAD,CAA/B,CAHF,EAIE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAMP,aAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;;AASA,eAAeG,IAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Redirect } from 'react-router-dom';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  padding: 2vw 10vw 0 4vw;\n  border-bottom: 0.5px solid #666;\n\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    transform: scale(1.02);\n  }\n`;\n\nconst StyledTitle = styled.h1`\n  font-weight: ${({ theme }) => theme.bold};\n  font-size: ${({ theme }) => theme.fontSize.l};\n`;\n\nconst StyledAuthor = styled.p`\n  color: #666;\n  font-size: ${({ theme }) => theme.fontSize.m};\n`;\n\nconst StyledContent = styled.p`\n  color: #666;\n  font-size: ${({ theme }) => theme.fontSize.s};\n`;\n\nconst StyledButton = styled.button`\n  color: #666;\n  margin: 10px 0 20px 10px;\n  height: 46px;\n  width: 100px;\n  background-color: transparent;\n  outline: none;\n  border: 1px solid ${({ theme }) => theme.yellow};\n  border-radius: 10px;\n  font-size: ${({ theme }) => theme.fontSize.xs};\n`;\n\nconst buttonHandler = id => {\n  console.log('dupa');\n  return <Redirect to={`post/${id}`} />;\n};\n\nconst Post = ({ title, author, content, id }) => (\n  <StyledWrapper>\n    <StyledTitle>{title}</StyledTitle>\n    <StyledAuthor>{author}</StyledAuthor>\n    <StyledContent>{ReactHtmlParser(content)}</StyledContent>\n    <StyledButton onClick={() => buttonHandler({ id })}>Read more</StyledButton>\n  </StyledWrapper>\n);\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}