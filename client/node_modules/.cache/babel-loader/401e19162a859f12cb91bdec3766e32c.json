{"ast":null,"code":"/* selectors */\nexport const getAll = ({\n  posts\n}) => posts.data;\n/* action name creator */\n\nconst reducerName = 'posts';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_POST = createActionName('ADD_POST');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchSuccess = payload => ({\n  payload,\n  type: FETCH_SUCCESS\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const addPostAction = payload => ({\n  payload,\n  type: ADD_POST\n});\n/* thunk creators */\n\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return { ...statePart,\n          loading: {\n            active: true,\n            error: false\n          }\n        };\n      }\n\n    case ADD_POST:\n      {\n        return { ...statePart,\n          data: action.payload\n        };\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return { ...statePart,\n          loading: {\n            active: false,\n            error: false\n          },\n          data: action.payload\n        };\n      }\n\n    case FETCH_ERROR:\n      {\n        return { ...statePart,\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        };\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/macus/Desktop/MERNapp/src/redux/postsRedux.js"],"names":["getAll","posts","data","reducerName","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","ADD_POST","fetchStarted","payload","type","fetchSuccess","fetchError","addPostAction","reducer","statePart","action","loading","active","error"],"mappings":"AAAA;AACA,OAAO,MAAMA,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAApC;AAEP;;AACA,MAAMC,WAAW,GAAG,OAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D;AAEA;;;AACA,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAD,CAApC;AACA,MAAMG,aAAa,GAAGH,gBAAgB,CAAC,eAAD,CAAtC;AACA,MAAMI,WAAW,GAAGJ,gBAAgB,CAAC,aAAD,CAApC;AAEA,MAAMK,QAAQ,GAAGL,gBAAgB,CAAC,UAAD,CAAjC;AAEA;;AACA,OAAO,MAAMM,YAAY,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEN;AAAjB,CAAL,CAA5B;AACP,OAAO,MAAMO,YAAY,GAAGF,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEL;AAAjB,CAAL,CAA5B;AACP,OAAO,MAAMO,UAAU,GAAGH,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEJ;AAAjB,CAAL,CAA1B;AAEP,OAAO,MAAMO,aAAa,GAAGJ,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAA7B;AAEP;;AAEA;;AACA,OAAO,MAAMO,OAAO,GAAG,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;AACtD,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKN,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGW,SADE;AAELE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,IADD;AAEPC,YAAAA,KAAK,EAAE;AAFA;AAFJ,SAAP;AAOD;;AACD,SAAKZ,QAAL;AAAe;AACb,eAAO,EACL,GAAGQ,SADE;AAELf,UAAAA,IAAI,EAAEgB,MAAM,CAACP;AAFR,SAAP;AAID;;AACD,SAAKJ,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGU,SADE;AAELE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,KADD;AAEPC,YAAAA,KAAK,EAAE;AAFA,WAFJ;AAMLnB,UAAAA,IAAI,EAAEgB,MAAM,CAACP;AANR,SAAP;AAQD;;AACD,SAAKH,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGS,SADE;AAELE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,KADD;AAEPC,YAAAA,KAAK,EAAEH,MAAM,CAACP;AAFP;AAFJ,SAAP;AAOD;;AACD;AACE,aAAOM,SAAP;AApCJ;AAsCD,CAvCM","sourcesContent":["/* selectors */\nexport const getAll = ({ posts }) => posts.data;\n\n/* action name creator */\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\nconst ADD_POST = createActionName('ADD_POST');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n\nexport const addPostAction = payload => ({ payload, type: ADD_POST });\n\n/* thunk creators */\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case ADD_POST: {\n      return {\n        ...statePart,\n        data: action.payload,\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}